{"version":3,"sources":["webpack:///foundation.min.js","webpack:///webpack/bootstrap ed3f1967c237c28d53ce","webpack:///./_src/js/mobile-menu.js","webpack:///./bower_components/foundation-sites/js/foundation.core.js","webpack:///./bower_components/foundation-sites/js/foundation.responsiveToggle.js","webpack:///./bower_components/foundation-sites/js/foundation.sticky.js","webpack:///./bower_components/foundation-sites/js/foundation.util.mediaQuery.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","document","ready","$","removeClass","_typeof","obj","Symbol","iterator","constructor","functionName","fn","undefined","Function","funcNameRegex","results","exec","toString","length","trim","parseValue","str","test","isNaN","parseFloat","hyphenate","replace","toLowerCase","Foundation","version","_plugins","_uuids","rtl","attr","plugin","className","attrName","this","registerPlugin","pluginName","uuid","GetYoDigits","$element","concat","data","trigger","push","unregisterPlugin","splice","indexOf","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","type","_this","plgs","forEach","foundation","string","keys","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","find","addBack","$el","opts","warn","split","e","opt","map","el","er","getFnName","transitionend","$elem","end","transitions","transition","WebkitTransition","MozTransition","OTransition","createElement","t","style","setTimeout","triggerHandler","util","throttle","func","delay","timer","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","MediaQuery","TypeError","Array","plugClass","ReferenceError","window","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","clearTimeout","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","writable","key","_createClass","protoProps","staticProps","ResponsiveToggle","element","options","extend","defaults","_events","targetID","$targetMenu","$toggler","_update","_updateMqHandler","on","toggleMenu","atLeast","hideFor","hide","show","toggle","off","emCalc","em","parseInt","getComputedStyle","body","fontSize","Sticky","$parent","parent","id","wasWrapped","$container","container","wrapInner","addClass","containerClass","stickyClass","data-resize","scrollCount","checkEvery","isStuck","one","containerHeight","css","getBoundingClientRect","height","elemHeight","anchor","$anchor","_parsePoints","_setSizes","_calc","reverse","join","top","topAnchor","btm","btmAnchor","documentElement","scrollHeight","pts","breaks","len","pt","place","offset","points","scrollListener","isOn","canStick","pageYOffset","_pauseListeners","checkSizes","scroll","_removeSticky","topPoint","bottomPoint","_setSticky","stickTo","mrgn","notStuckTo","left","isTop","stickToTop","anchorPt","anchorHeight","topOrBottom","cb","stickyOn","newElemWidth","width","comp","pdng","max-width","newContainerHeight","hasClass","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","winHeight","innerHeight","bottom","unwrap","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","isArray","queries","current","namedQueries","self","extractedStyles","_getCurrentSize","_watcher","size","query","matchMedia","matches","matched","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","parentNode","insertBefore","currentStyle","matchMedium","text","styleSheet","cssText","textContent"],"mappings":"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","file":"foundation.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\njQuery(document).ready(function ($) {\n  $('#site-navigation').removeClass('hide-for-small-only');\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function ($) {\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.4'; // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function rtl() {\n      return $('html').attr('dir') === 'rtl';\n    },\n\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function plugin(_plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(_plugin); // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n\n      var attrName = hyphenate(className); // Add to the Foundation object and the plugins list (for reflowing)\n\n      this._plugins[attrName] = this[className] = _plugin;\n    },\n\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function registerPlugin(plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr(\"data-\".concat(pluginName))) {\n        plugin.$element.attr(\"data-\".concat(pluginName), plugin.uuid);\n      }\n\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n\n\n      plugin.$element.trigger(\"init.zf.\".concat(pluginName));\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function unregisterPlugin(plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n\n      plugin.$element.removeAttr(\"data-\".concat(pluginName)).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger(\"destroyed.zf.\".concat(pluginName));\n\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function reInit(plugins) {\n      var isJQ = plugins instanceof $;\n\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = _typeof(plugins),\n              _this = this,\n              fns = {\n            'object': function object(plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function string() {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function undefined() {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function GetYoDigits(length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? \"-\".concat(namespace) : '');\n    },\n\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function reflow(elem, plugins) {\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      } // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this; // Iterate through each plugin\n\n\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name]; // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']'); // For each plugin found, initialize it\n\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {}; // Don't double-dip on plugins\n\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function transitionend($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function throttle(func, delay) {\n      var timer = null;\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  }; // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n\n  var foundation = function foundation(method) {\n    var type = _typeof(method),\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError(\"We're sorry, \".concat(type, \" is not a valid parameter. You must use a string representing the method you wish to invoke.\"));\n    }\n\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation; // Polyfill for requestAnimationFrame\n\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n    var vendors = ['webkit', 'moz'];\n\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n\n\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function now() {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } // Polyfill to get the name of a function in IE9\n\n\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  } // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n\n\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n!function ($) {\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n  var ResponsiveToggle =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: \"_init\",\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $(\"#\".concat(targetID));\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: \"_events\",\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: \"_update\",\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        } // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: \"toggleMenu\",\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n          /**\n           * Fires when the element attached to the tab bar toggles.\n           * @event ResponsiveToggle#toggled\n           */\n\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  }; // Window exports\n\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n!function ($) {\n  /**\n   * Sticky module.\n   * @module foundation.sticky\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   */\n  var Sticky =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Creates a new instance of a sticky thing.\n     * @class\n     * @param {jQuery} element - jQuery object to make sticky.\n     * @param {Object} options - options object passed when creating the element programmatically.\n     */\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n    /**\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n     * @function\n     * @private\n     */\n\n\n    _createClass(Sticky, [{\n      key: \"_init\",\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n        this.$element.addClass(this.options.stickyClass).attr({\n          'data-resize': id\n        });\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          //We calculate the container height to have correct values for anchor points offset calculation.\n          _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n\n          _this.$container.css('height', _this.containerHeight);\n\n          _this.elemHeight = _this.containerHeight;\n\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            _this._calc(false);\n          });\n\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n      /**\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: \"_parsePoints\",\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $(\"#\".concat(place[0]));\n            pt = anchor.offset().top;\n\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n      /**\n       * Adds event handlers for the scrolling element.\n       * @private\n       * @param {String} id - psuedo-random id for unique scroll event listener.\n       */\n\n    }, {\n      key: \"_events\",\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = \"scroll.zf.\".concat(id);\n\n        if (this.isOn) {\n          return;\n        }\n\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n      /**\n       * Removes event handlers for scroll and change events on anchor.\n       * @fires Sticky#pause\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n       */\n\n    }, {\n      key: \"_pauseListeners\",\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n        /**\n         * Fires when the plugin is paused due to resize event shrinking the view.\n         * @event Sticky#pause\n         * @private\n         */\n\n        this.$element.trigger('pause.zf.sticky');\n      }\n      /**\n       * Called on every `scroll` event and on `_init`\n       * fires functions based on booleans and cached values\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n       */\n\n    }, {\n      key: \"_calc\",\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n      /**\n       * Causes the $element to become stuck.\n       * Adds `position: fixed;`, and helper classes.\n       * @fires Sticky#stuckto\n       * @function\n       * @private\n       */\n\n    }, {\n      key: \"_setSticky\",\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = \"\".concat(this.options[mrgn], \"em\");\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n        this.isStuck = true;\n        this.$element.removeClass(\"is-anchored is-at-\".concat(notStuckTo)).addClass(\"is-stuck is-at-\".concat(stickTo)).css(css)\n        /**\n         * Fires when the $element has become `position: fixed;`\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n         * @event Sticky#stuckto\n         */\n        .trigger(\"sticky.zf.stuckto:\".concat(stickTo));\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n      /**\n       * Causes the $element to become unstuck.\n       * Removes `position: fixed;`, and helper classes.\n       * Adds other helper classes.\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n       * @fires Sticky#unstuckfrom\n       * @private\n       */\n\n    }, {\n      key: \"_removeSticky\",\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n        css[mrgn] = 0;\n        css['bottom'] = 'auto';\n\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        css['left'] = '';\n        this.isStuck = false;\n        this.$element.removeClass(\"is-stuck is-at-\".concat(stickTo)).addClass(\"is-anchored is-at-\".concat(topOrBottom)).css(css)\n        /**\n         * Fires when the $element has become anchored.\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n         * @event Sticky#unstuckfrom\n         */\n        .trigger(\"sticky.zf.unstuckfrom:\".concat(topOrBottom));\n      }\n      /**\n       * Sets the $element and $container sizes for plugin.\n       * Calls `_setBreakPoints`.\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n       * @private\n       */\n\n    }, {\n      key: \"_setSizes\",\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        }\n\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdng = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': \"\".concat(newElemWidth - pdng, \"px\")\n        });\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (this.isStuck) {\n          this.$element.css({\n            \"left\": this.$container.offset().left + parseInt(comp['padding-left'], 10)\n          });\n        } else {\n          if (this.$element.hasClass('is-at-bottom')) {\n            var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n            this.$element.css('top', anchorPt);\n          }\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        });\n      }\n      /**\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n       * @param {Function} cb - optional callback function to be called on completion.\n       * @private\n       */\n\n    }, {\n      key: \"_setBreakPoints\",\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          } else {\n            return false;\n          }\n        }\n\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n            // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {//this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }\n      /**\n       * Destroys the current sticky element.\n       * Resets the element to the top position first.\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n       * @function\n       */\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(\"\".concat(this.options.stickyClass, \" is-anchored is-at-top\")).css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\n     * Customizable container template. Add your own classes for styling and sizing.\n     * @option\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n     */\n    container: '<div data-sticky-container></div>',\n\n    /**\n     * Location in the view the element sticks to.\n     * @option\n     * @example 'top'\n     */\n    stickTo: 'top',\n\n    /**\n     * If anchored to a single element, the id of that element.\n     * @option\n     * @example 'exampleId'\n     */\n    anchor: '',\n\n    /**\n     * If using more than one element as anchor points, the id of the top anchor.\n     * @option\n     * @example 'exampleId:top'\n     */\n    topAnchor: '',\n\n    /**\n     * If using more than one element as anchor points, the id of the bottom anchor.\n     * @option\n     * @example 'exampleId:bottom'\n     */\n    btmAnchor: '',\n\n    /**\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginTop: 1,\n\n    /**\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginBottom: 1,\n\n    /**\n     * Breakpoint string that is the minimum screen size an element should become sticky.\n     * @option\n     * @example 'medium'\n     */\n    stickyOn: 'medium',\n\n    /**\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n     * @option\n     * @example 'sticky'\n     */\n    stickyClass: 'sticky',\n\n    /**\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\n     * @option\n     * @example 'sticky-container'\n     */\n    containerClass: 'sticky-container',\n\n    /**\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n     * @option\n     * @example 50\n     */\n    checkEvery: -1\n  };\n  /**\n   * Helper function to calculate em values\n   * @param Number {em} - number of em's to calculate into pixels\n   */\n\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  } // Window exports\n\n\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function ($) {\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n  var MediaQuery = {\n    queries: [],\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function _init() {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: \"only screen and (min-width: \".concat(namedQueries[key], \")\")\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function atLeast(size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function get(size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function _getCurrentSize() {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (_typeof(matched) === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function _watcher() {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize; // Broadcast the media query change on the window\n\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n  Foundation.MediaQuery = MediaQuery; // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict'; // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media; // For those that don't support matchMedium\n\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n      script && script.parentNode && script.parentNode.insertBefore(style, script); // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n      styleMedia = {\n        matchMedium: function matchMedium(media) {\n          var text = \"@media \".concat(media, \"{ #matchmediajs-test { width: 1px; } }\"); // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          } // Test if media query is true or false\n\n\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }()); // Thank you: https://github.com/sindresorhus/query-string\n\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key); // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n\n      return ret;\n    }, {});\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1);\n__webpack_require__(4);\n__webpack_require__(3);\n__webpack_require__(2);\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// foundation.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed3f1967c237c28d53ce","jQuery( document ).ready( function( $ ) {\n\t$('#site-navigation').removeClass( 'hide-for-small-only' );\n} );\n\n\n\n// WEBPACK FOOTER //\n// ./_src/js/mobile-menu.js","!function($) {\n\n\"use strict\";\n\nvar FOUNDATION_VERSION = '6.2.4';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Returns a boolean for RTL support\n   */\n  rtl: function(){\n    return $('html').attr('dir') === 'rtl';\n  },\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = this.GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger(`init.zf.${pluginName}`);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger(`destroyed.zf.${pluginName}`);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               p = hyphenate(p);\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             plugins = hyphenate(plugins);\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id\n   */\n  GetYoDigits: function(length, namespace){\n    length = length || 6;\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  transitionend: function($elem){\n    var transitions = {\n      'transition': 'transitionend',\n      'WebkitTransition': 'webkitTransitionEnd',\n      'MozTransition': 'transitionend',\n      'OTransition': 'otransitionend'\n    };\n    var elem = document.createElement('div'),\n        end;\n\n    for (var t in transitions){\n      if (typeof elem.style[t] !== 'undefined'){\n        end = transitions[t];\n      }\n    }\n    if(end){\n      return end;\n    }else{\n      end = setTimeout(function(){\n        $elem.triggerHandler('transitionend', [$elem]);\n      }, 1);\n      return 'transitionend';\n    }\n  }\n};\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\n// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\n * The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.\n */\nvar foundation = function(method) {\n  var type = typeof method,\n      $meta = $('meta.foundation-mq'),\n      $noJS = $('.no-js');\n\n  if(!$meta.length){\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\n  }\n  if($noJS.length){\n    $noJS.removeClass('no-js');\n  }\n\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n    Foundation.MediaQuery._init();\n    Foundation.reflow(this);\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n      if(this.length === 1){//if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n      }else{\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n          plugClass[method].apply($(el).data('zfPlugin'), args);\n        });\n      }\n    }else{//error for no class or no method\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n    }\n  }else{//error for invalid argument type\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\n  }\n  return this;\n};\n\nwindow.Foundation = Foundation;\n$.fn.foundation = foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if(/true/.test(str)) return true;\n  else if(/false/.test(str)) return false;\n  else if(!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n}(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./bower_components/foundation-sites/js/foundation.core.js","'use strict';\n\n!function($) {\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n\nclass ResponsiveToggle {\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\n  }\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  _init() {\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $(`#${targetID}`);\n    this.$toggler = this.$element.find('[data-toggle]');\n\n    this._update();\n  }\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this._updateMqHandler = this._update.bind(this);\n    \n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  }\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  _update() {\n    // Mobile\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n      this.$element.hide();\n      this.$targetMenu.show();\n    }\n  }\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  toggleMenu() {   \n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$targetMenu.toggle(0);\n\n      /**\n       * Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled\n       */\n      this.$element.trigger('toggled.zf.responsiveToggle');\n    }\n  };\n\n  destroy() {\n    this.$element.off('.zf.responsiveToggle');\n    this.$toggler.off('.zf.responsiveToggle');\n    \n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n    \n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @example 'medium'\n   */\n  hideFor: 'medium'\n};\n\n// Window exports\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n\n}(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./bower_components/foundation-sites/js/foundation.responsiveToggle.js","'use strict';\n\n!function($) {\n\n/**\n * Sticky module.\n * @module foundation.sticky\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nclass Sticky {\n  /**\n   * Creates a new instance of a sticky thing.\n   * @class\n   * @param {jQuery} element - jQuery object to make sticky.\n   * @param {Object} options - options object passed when creating the element programmatically.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Sticky');\n  }\n\n  /**\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n   * @function\n   * @private\n   */\n  _init() {\n    var $parent = this.$element.parent('[data-sticky-container]'),\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n        _this = this;\n\n    if (!$parent.length) {\n      this.wasWrapped = true;\n    }\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n    this.$container.addClass(this.options.containerClass);\n\n    this.$element.addClass(this.options.stickyClass)\n                 .attr({'data-resize': id});\n\n    this.scrollCount = this.options.checkEvery;\n    this.isStuck = false;\n    $(window).one('load.zf.sticky', function(){\n      //We calculate the container height to have correct values for anchor points offset calculation.\n      _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n      _this.$container.css('height', _this.containerHeight);\n      _this.elemHeight = _this.containerHeight;\n      if(_this.options.anchor !== ''){\n        _this.$anchor = $('#' + _this.options.anchor);\n      }else{\n        _this._parsePoints();\n      }\n\n      _this._setSizes(function(){\n        _this._calc(false);\n      });\n      _this._events(id.split('-').reverse().join('-'));\n    });\n  }\n\n  /**\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n   * @function\n   * @private\n   */\n  _parsePoints() {\n    var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n        btm = this.options.btmAnchor== \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n        pts = [top, btm],\n        breaks = {};\n    for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n      var pt;\n      if (typeof pts[i] === 'number') {\n        pt = pts[i];\n      } else {\n        var place = pts[i].split(':'),\n            anchor = $(`#${place[0]}`);\n\n        pt = anchor.offset().top;\n        if (place[1] && place[1].toLowerCase() === 'bottom') {\n          pt += anchor[0].getBoundingClientRect().height;\n        }\n      }\n      breaks[i] = pt;\n    }\n\n\n    this.points = breaks;\n    return;\n  }\n\n  /**\n   * Adds event handlers for the scrolling element.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.\n   */\n  _events(id) {\n    var _this = this,\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\n    if (this.isOn) { return; }\n    if (this.canStick) {\n      this.isOn = true;\n      $(window).off(scrollListener)\n               .on(scrollListener, function(e) {\n                 if (_this.scrollCount === 0) {\n                   _this.scrollCount = _this.options.checkEvery;\n                   _this._setSizes(function() {\n                     _this._calc(false, window.pageYOffset);\n                   });\n                 } else {\n                   _this.scrollCount--;\n                   _this._calc(false, window.pageYOffset);\n                 }\n              });\n    }\n\n    this.$element.off('resizeme.zf.trigger')\n                 .on('resizeme.zf.trigger', function(e, el) {\n                     _this._setSizes(function() {\n                       _this._calc(false);\n                       if (_this.canStick) {\n                         if (!_this.isOn) {\n                           _this._events(id);\n                         }\n                       } else if (_this.isOn) {\n                         _this._pauseListeners(scrollListener);\n                       }\n                     });\n    });\n  }\n\n  /**\n   * Removes event handlers for scroll and change events on anchor.\n   * @fires Sticky#pause\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n   */\n  _pauseListeners(scrollListener) {\n    this.isOn = false;\n    $(window).off(scrollListener);\n\n    /**\n     * Fires when the plugin is paused due to resize event shrinking the view.\n     * @event Sticky#pause\n     * @private\n     */\n     this.$element.trigger('pause.zf.sticky');\n  }\n\n  /**\n   * Called on every `scroll` event and on `_init`\n   * fires functions based on booleans and cached values\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n   */\n  _calc(checkSizes, scroll) {\n    if (checkSizes) { this._setSizes(); }\n\n    if (!this.canStick) {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n      return false;\n    }\n\n    if (!scroll) { scroll = window.pageYOffset; }\n\n    if (scroll >= this.topPoint) {\n      if (scroll <= this.bottomPoint) {\n        if (!this.isStuck) {\n          this._setSticky();\n        }\n      } else {\n        if (this.isStuck) {\n          this._removeSticky(false);\n        }\n      }\n    } else {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n    }\n  }\n\n  /**\n   * Causes the $element to become stuck.\n   * Adds `position: fixed;`, and helper classes.\n   * @fires Sticky#stuckto\n   * @function\n   * @private\n   */\n  _setSticky() {\n    var _this = this,\n        stickTo = this.options.stickTo,\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n        css = {};\n\n    css[mrgn] = `${this.options[mrgn]}em`;\n    css[stickTo] = 0;\n    css[notStuckTo] = 'auto';\n    css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n    this.isStuck = true;\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\n                 .addClass(`is-stuck is-at-${stickTo}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become `position: fixed;`\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n                  * @event Sticky#stuckto\n                  */\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\n    this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function() {\n      _this._setSizes();\n    });\n  }\n\n  /**\n   * Causes the $element to become unstuck.\n   * Removes `position: fixed;`, and helper classes.\n   * Adds other helper classes.\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n   * @fires Sticky#unstuckfrom\n   * @private\n   */\n  _removeSticky(isTop) {\n    var stickTo = this.options.stickTo,\n        stickToTop = stickTo === 'top',\n        css = {},\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickToTop ? 'bottom' : 'top',\n        topOrBottom = isTop ? 'top' : 'bottom';\n\n    css[mrgn] = 0;\n\n    css['bottom'] = 'auto';\n    if(isTop) {\n      css['top'] = 0;\n    } else {\n      css['top'] = anchorPt;\n    }\n\n    css['left'] = '';\n    this.isStuck = false;\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become anchored.\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n                  * @event Sticky#unstuckfrom\n                  */\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\n  }\n\n  /**\n   * Sets the $element and $container sizes for plugin.\n   * Calls `_setBreakPoints`.\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n   * @private\n   */\n  _setSizes(cb) {\n    this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n    if (!this.canStick) {\n      if (cb && typeof cb === 'function') { cb(); }\n    }\n    var _this = this,\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\n        comp = window.getComputedStyle(this.$container[0]),\n        pdng = parseInt(comp['padding-right'], 10);\n\n    if (this.$anchor && this.$anchor.length) {\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n    } else {\n      this._parsePoints();\n    }\n\n    this.$element.css({\n      'max-width': `${newElemWidth - pdng}px`\n    });\n\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n    if (this.$element.css(\"display\") == \"none\") {\n      newContainerHeight = 0;\n    }\n    this.containerHeight = newContainerHeight;\n    this.$container.css({\n      height: newContainerHeight\n    });\n    this.elemHeight = newContainerHeight;\n\n    if (this.isStuck) {\n      this.$element.css({\"left\":this.$container.offset().left + parseInt(comp['padding-left'], 10)});\n    } else {\n      if (this.$element.hasClass('is-at-bottom')) {\n        var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n        this.$element.css('top', anchorPt);\n      }\n    }\n\n    this._setBreakPoints(newContainerHeight, function() {\n      if (cb && typeof cb === 'function') { cb(); }\n    });\n  }\n\n  /**\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n   * @param {Function} cb - optional callback function to be called on completion.\n   * @private\n   */\n  _setBreakPoints(elemHeight, cb) {\n    if (!this.canStick) {\n      if (cb && typeof cb === 'function') { cb(); }\n      else { return false; }\n    }\n    var mTop = emCalc(this.options.marginTop),\n        mBtm = emCalc(this.options.marginBottom),\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n    if (this.options.stickTo === 'top') {\n      topPoint -= mTop;\n      bottomPoint -= (elemHeight + mTop);\n    } else if (this.options.stickTo === 'bottom') {\n      topPoint -= (winHeight - (elemHeight + mBtm));\n      bottomPoint -= (winHeight - mBtm);\n    } else {\n      //this would be the stickTo: both option... tricky\n    }\n\n    this.topPoint = topPoint;\n    this.bottomPoint = bottomPoint;\n\n    if (cb && typeof cb === 'function') { cb(); }\n  }\n\n  /**\n   * Destroys the current sticky element.\n   * Resets the element to the top position first.\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n   * @function\n   */\n  destroy() {\n    this._removeSticky(true);\n\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\n                 .css({\n                   height: '',\n                   top: '',\n                   bottom: '',\n                   'max-width': ''\n                 })\n                 .off('resizeme.zf.trigger');\n    if (this.$anchor && this.$anchor.length) {\n      this.$anchor.off('change.zf.sticky');\n    }\n    $(window).off(this.scrollListener);\n\n    if (this.wasWrapped) {\n      this.$element.unwrap();\n    } else {\n      this.$container.removeClass(this.options.containerClass)\n                     .css({\n                       height: ''\n                     });\n    }\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSticky.defaults = {\n  /**\n   * Customizable container template. Add your own classes for styling and sizing.\n   * @option\n   * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n   */\n  container: '<div data-sticky-container></div>',\n  /**\n   * Location in the view the element sticks to.\n   * @option\n   * @example 'top'\n   */\n  stickTo: 'top',\n  /**\n   * If anchored to a single element, the id of that element.\n   * @option\n   * @example 'exampleId'\n   */\n  anchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the top anchor.\n   * @option\n   * @example 'exampleId:top'\n   */\n  topAnchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the bottom anchor.\n   * @option\n   * @example 'exampleId:bottom'\n   */\n  btmAnchor: '',\n  /**\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginTop: 1,\n  /**\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginBottom: 1,\n  /**\n   * Breakpoint string that is the minimum screen size an element should become sticky.\n   * @option\n   * @example 'medium'\n   */\n  stickyOn: 'medium',\n  /**\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n   * @option\n   * @example 'sticky'\n   */\n  stickyClass: 'sticky',\n  /**\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\n   * @option\n   * @example 'sticky-container'\n   */\n  containerClass: 'sticky-container',\n  /**\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n   * @option\n   * @example 50\n   */\n  checkEvery: -1\n};\n\n/**\n * Helper function to calculate em values\n * @param Number {em} - number of em's to calculate into pixels\n */\nfunction emCalc(em) {\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n}\n\n// Window exports\nFoundation.plugin(Sticky, 'Sticky');\n\n}(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./bower_components/foundation-sites/js/foundation.sticky.js","'use strict';\n\n!function($) {\n\n// Default set of media queries\nconst defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n\n  current: '',\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      if(namedQueries.hasOwnProperty(key)) {\n        self.queries.push({\n          name: key,\n          value: `only screen and (min-width: ${namedQueries[key]})`\n        });\n      }\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n  },\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get(size) {\n    for (var i in this.queries) {\n      if(this.queries.hasOwnProperty(i)) {\n        var query = this.queries[i];\n        if (size === query.name) return query.value;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize() {\n    var matched;\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if (typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher() {\n    $(window).on('resize.zf.mediaquery', () => {\n      var newSize = this._getCurrentSize(), currentSize = this.current;\n\n      if (newSize !== currentSize) {\n        // Change the current media query\n        this.current = newSize;\n\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium(media) {\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    }\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  }\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\nFoundation.MediaQuery = MediaQuery;\n\n}(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./bower_components/foundation-sites/js/foundation.util.mediaQuery.js"],"sourceRoot":""}